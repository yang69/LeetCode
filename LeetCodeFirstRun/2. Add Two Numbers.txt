/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode answer = new ListNode(0);
        ListNode current = answer;
        ListNode previous = null;
        int val1 = 0;
        int val2 = 0;
        int sum = 0;
        int carry = 0;
        while(true) {   //手算流程，每次运算一位，并用carry记录是否有进位
            if(l1 != null) {
                if(l2 !=null) {
                    sum = l1.val + l2.val + carry;
                    l1 = l1.next;
                    l2 = l2.next;
                    current.val = sum % 10;
                    carry = sum / 10;
                    previous = current;
                    current.next = new ListNode(0);
                    current = current.next;
                }
                else {
                    sum = l1.val + carry;
                    l1 = l1.next;
                    current.val = sum % 10;
                    carry = sum / 10;
                    previous = current;
                    current.next = new ListNode(0);
                    current = current.next;
                }
            }
            else{
                if(l2 != null) {
                    sum = l2.val + carry;
                    l2 = l2.next;
                    current.val = sum % 10;
                    carry = sum / 10;
                    previous = current;
                    current.next = new ListNode(0);
                    current = current.next;
                }
                else {
                    break;
                }
            }
        }
        
        if(carry == 0) {     //最高位是否有进位
            previous.next = null;
        }
        else {
            current.val = carry;
            current.next = null;
        }
        
        return answer;
    }
}